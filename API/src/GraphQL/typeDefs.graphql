 scalar Date
 schema { query: Query}
 
 type Query {
    Coins(limit: Int!, offset: Int!): [Coin]
    ContractAddresses(limit: Int!): [Coin]
    PromotedCoins: [PromotedCoin],
    CoinByID(CoinID: ID!): Coin,
    CoinByNameOrAddress(Name: String, ContractAddress: String): [Coin],
    ReservationByNumber(Number: String!): Reservation
    BannerAds: [BannerAd]
    TopCoins(limit: Int!, offset: Int!, query: String!): [Coin]
    NewCoins(limit: Int!, offset: Int!): [Coin]
    Doxxed(limit: Int!, offset: Int!): [Coin]
    Presale(limit: Int!, offset: Int!): [Coin]
    Chains: [Chain] 
    #ADMIN
    VoteLog: [Vote]
    ForApprovalCoinCount: Int
    AllCoinCount: Int
    DoxxedCoinCount: Int
    PresaleCoinCount: Int
    PendingReservationCount: Int
    Reservations(Status: String!): [Reservation]
    ForApprovalCoins: [Coin]
    GetUpcomingPromotions: [PromotedCoin]
    GetTransactions: [Transaction]
 }

 type Coin {
    CoinID: ID!,
    Name: String!,
    Chain: String!,
    Symbol: String!,
    ContractAddress: String!,
    LaunchDate: Date!,
    IsPresale: Boolean!,
    IsDoxxed: Boolean,
    Description: String!,
    AuditLink: String,
    Website: String,
    Telegram: String!,
    Twitter: String,
    Discord: String,
    LogoLink: String!, 
    VoteToday: Int,
    AllTimeVote: Int,
    IsUpvoted(ClientIP: String): Boolean,
    Status: String!
    ContactEmail: String
    createdAt: Date
    updatedAt: Date
 }

 type PromotedCoin {
    id: ID!,
    CoinID: ID,
    Coins: Coin,
    StartDate: Date,
    EndDate: Date,
    ReservationNumber: String
 }

type Chain {
   ChainID: ID!,
   ChainSymbol: String,
   Name: String,
   Logo: String,
   createdAt: Date
   updatedAt: Date
}

type Reservation {
   Number: ID!
   AdType: String
   StartDate: Date,
   EndDate: Date,
   Telegram: String,
   AmountToPay: Float,
   Discount: Float,
   PaymentStatus: String,
   createdAt: Date
   updatedAt: Date
}

type Transaction {
   Number: ID!,
   TxnHash: String,
   Memo: String,
   createdAt: Date
   updatedAt: Date
}


type BannerAd {
   id: ID!
   BannerType: String
   ImageLocation: String
   StartDate: Date
   EndDate: Date
   ReservationNumber: String 
   Telegram: String
   Swap: String
   Website: String
   BannerName: String
   Description: String
}

 type Vote {
   id: ID!,
   CoinID: ID,
   DateOfVote: Date,
   IPAddress: String
   createdAt: Date
   updatedAt: Date
 }

 type Mutation {
   voteCoin(
      CoinID: ID!
   ): String

    createCoin(
      Name: String!,
      Symbol: String!,
      Chain: String!,
      ContractAddress: String!,
      Description: String!,
      IsPresale: Boolean!,
      LaunchDate: Date!,
      Telegram: String!,
      Website: String,
      Twitter: String,
      Discord: String,
      AuditLink: String,
      LogoLink: String!,
      ContactEmail: String!,
      Status: String!
    ): String

    createPromotion(CoinID: Int!,
      StartDate: Date,
      EndDate: Date,
      ReservationNumber: String,
      Number: String,
      PaymentStatus: String,
      TxnHash: String,
      Memo: String
    ): String

    updateCoinInfo(
      CoinID: Int!,
      Name: String!,
      Chain: String!,
      Symbol: String!,
      ContractAddress: String!,
      LaunchDate: Date!,
      IsPresale: Boolean!,
      IsDoxxed: Boolean,
      Description: String!,
      AuditLink: String,
      Website: String,
      Telegram: String!,
      Twitter: String,
      Discord: String,
      LogoLink: String!,
      ContactEmail: String
      Status: String
      updatedAt: Date
    ): String
      
    updateReservationStatus(Number: String 
    PaymentStatus: String): String

    createReservation(
      Number: String!
      AdType: String
      StartDate: Date
      EndDate: Date
      Telegram: String
      AmountToPay: Float
      Discount: Float
      PaymentStatus: String
    ): String

    createBannerAd(
      BannerType: String,
      ImageLocation: String,
      StartDate: Date,
      EndDate: Date, 
      ReservationNumber: String,
      Telegram: String,
      Swap: String,
      Website: String,
      BannerName: String,
      Number: String,
      Description: String,
      PaymentStatus: String,
      TxnHash: String,
      Memo: String): String

    removePromotedCoin(id: Int!): String

    createChain(ChainSymbol: String!, Name: String!, Logo: String): String


 }